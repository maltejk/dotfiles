# vim: filetype=sh

export SSH_AUTH_SOCK=${HOME}/.ssh/.ssh-auth.sock
pidof ssh-agent >/dev/null || eval $(ssh-agent -a $SSH_AUTH_SOCK)

dockeron () {
  if [ -z "$1" ]; then
    lxc info nunas:docker | grep -i running > /dev/null || lxc start nunas:docker
    eval $(docker-machine env docker)
  else
    eval $(docker-machine env "$1")
  fi
}

dockerenv () {
  if [ -z "$1" ]; then
    eval $(docker-machine env docker)
  else
    eval $(docker-machine env "$1")
  fi
}

dockeroff () {
    lxc info nunas:docker | grep -i running > /dev/null || lxc stop nunas:docker
}

alias pdnsutil='ssh -t a.dns.mjk.me "sudo pdnsutil"'

gosetup () {
  export GOPATH=$HOME/go
  export PATH=$GOPATH/bin:$PATH
}

brewoff() {
  local prefix="$HOMEBREW_PREFIX"
  local path_result
  local manpath_result
  local infopath_result

  # Clean PATH
  path_result=$(echo "$PATH" | awk -v prefix="$prefix" 'BEGIN { RS=":"; ORS=":" } !($0 ~ prefix "/(s?bin)$")')

  # Clean MANPATH
  manpath_result=$(echo "$MANPATH" | awk -v prefix="$prefix/share/man" 'BEGIN { RS=":"; ORS=":" } !($0 ~ "^" prefix "/")')

  # Clean INFOPATH
  infopath_result=$(echo "$INFOPATH" | awk -v prefix="$prefix/share/info" 'BEGIN { RS=":"; ORS=":" } !($0 ~ "^" prefix "/")')

  # Export the changed variables
  declare -x PATH="$path_result"
  declare -x MANPATH="$manpath_result"
  declare -x INFOPATH="$infopath_result"
}
