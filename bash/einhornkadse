# kill macOS ssh-agent, daemon can't be disabled due to SIP
if [[ "$(uname -s)" == "Darwin" ]]; then
  DEBUG=true
  __ssh_agent_pids=$(pidof ssh-agent)
  __ssh_agent_pid_amount=$(printf "%s" "$__ssh_agent_pids" | wc -w)
  __ssh_agent_pid_amount=${__ssh_agent_pid_amount// /}
  if [[ "$__ssh_agent_pids_amount" -gt 0 ]]; then
    for pid in $__ssh_agent_pids; do
      $DEBUG && printf "Found PID %s," $pid
      if [[ "$(ps -p ${pid} -o command=)" == "/usr/bin/ssh-agent -l" ]]; then
        $DEBUG && printf " seems to be system's ssh-agent, killing it."
        kill ${pid}
      else
        $DEBUG && printf " doing nothing."
      fi
      $DEBUG && printf "\n"
    done
    unset $pid
  fi
fi
export SSH_AUTH_SOCK=${HOME}/.ssh/.ssh-auth.sock
if [[ -z "$(pidof ssh-agent)"  ]]; then
  rm $SSH_AUTH_SOCK;
  eval $(ssh-agent -a $SSH_AUTH_SOCK)
fi

eval $(brew shellenv)

source "$HOMEBREW_PREFIX/etc/profile.d/bash_completion.sh"

export GIT_PS1_SHOWDIRTYSTATE=true
export GIT_PS1_SHOWUNTRACKEDFILES=true
export GIT_PS1_SHOWUPSTREAM="auto"

export KUBE_PS1_PREFIX=" ("
export KUBE_PS1_SYMBOL_ENABLE=false
export KUBE_PS1_CTX_COLOR="black"
export KUBE_PS1_NS_COLOR="black"

#prompt with git info and k8s foo

export PS1='[\t] \u@\h:\w$(kube_ps1)$(__git_ps1 " (%s) ")\$ '
#export PROMPT_COMMAND='__git_ps1 "\u@\h:\w" "$(kube_ps1) \\\$ "'

kube_ps1 () {
  true
}

kubesetup () {
  if [ -n "$1" ]; then
    KUBECONFIG_FILE=$HOME/.kube/config-${1}
    if [ -f $KUBECONFIG_FILE ]; then
      source <(kubectl completion bash)
      complete -F __start_kubectl k
      export KUBECONFIG="$KUBECONFIG_FILE"
      echo "loaded cluster config ${1}"
    else
      echo "please chose a cluster:"
      ( cd $HOME/.kube; ls config-* | sed 's/config-/- /g' )
    fi
    unset KUBECONFIG_FILE
  fi
  source "$HOMEBREW_PREFIX/opt/kube-ps1/share/kube-ps1.sh"
  source "$HOME/.bashrc.d/kube-ps1-extended.sh"
}

kubeca () {
  KUBECONFIG_FILE=$HOME/.kube/config-${1}
  echo "printing ca for $KUBECONFIG_FILE"
  grep 'certificate-authority-data:' $KUBECONFIG_FILE | cut -d ':' -f 2 | tail -c +2 | base64 -d
}

kubeserver () {
  KUBECONFIG_FILE=$HOME/.kube/config-${1}
  echo "printing server for $KUBECONFIG_FILE"
  grep 'server:' $KUBECONFIG_FILE | cut -d ':' -f 2- | tail -c +2
}

alias k='kubectl'
alias kns='kubens'

export PATH=$HOME/.local/bin:$PATH

source $HOME/.awsconfig

#. "/usr/local/opt/asdf/asdf.sh"
#. "/usr/local/opt/asdf/etc/bash_completion.d/asdf.bash"

